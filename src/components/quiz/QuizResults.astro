---
import { Icon } from 'astro-icon/components';

export interface Props {
  score: number;
  totalQuestions: number;
}

const { score, totalQuestions } = Astro.props;

const percentage = Math.round((score / totalQuestions) * 100);

// Performance message based on score
let performanceMessage = "";
let performanceClass = "";
let iconName = "";

if (percentage >= 80) {
  performanceMessage = "Excellent! You're a trivia master!";
  performanceClass = "text-green-600 dark:text-green-400";
  iconName = "tabler:trophy";
} else if (percentage >= 60) {
  performanceMessage = "Good job! You know your stuff!";
  performanceClass = "text-blue-600 dark:text-blue-400";
  iconName = "tabler:star";
} else if (percentage >= 40) {
  performanceMessage = "Not bad! Keep learning!";
  performanceClass = "text-yellow-600 dark:text-yellow-400";
  iconName = "tabler:bulb";
} else {
  performanceMessage = "Keep practicing! You'll get better!";
  performanceClass = "text-red-600 dark:text-red-400";
  iconName = "tabler:heart";
}
---

<div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-8 max-w-md mx-auto text-center">
  <!-- Icon -->
  <div class="mb-6">
    <div class={`inline-flex items-center justify-center w-16 h-16 rounded-full ${performanceClass} bg-opacity-10`}>
      <Icon name={iconName} class="w-8 h-8" />
    </div>
  </div>
  
  <!-- Score Display -->
  <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">
    Quiz Complete!
  </h2>
  
  <div class="mb-6">
    <div class="text-4xl font-bold text-primary-600 dark:text-primary-400 mb-2">
      {score}/{totalQuestions}
    </div>
    <div class="text-lg text-gray-600 dark:text-gray-400">
      {percentage}% Correct
    </div>
  </div>
  
  <!-- Performance Message -->
  <div class={`text-lg font-semibold mb-6 ${performanceClass}`}>
    {performanceMessage}
  </div>
  
  <!-- Play Again Button -->
  <button
    id="playAgainBtn"
    type="button"
    class="w-full bg-primary-600 hover:bg-primary-700 text-white font-semibold py-3 px-6 rounded-lg transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800"
  >
    <Icon name="tabler:refresh" class="w-5 h-5 inline mr-2" />
    Play Again
  </button>
</div>

<script>
  // Handle play again functionality
  document.addEventListener('DOMContentLoaded', () => {
    const playAgainBtn = document.getElementById('playAgainBtn');
    
    if (playAgainBtn) {
      playAgainBtn.addEventListener('click', () => {
        // Dispatch custom event for parent component to handle
        const event = new CustomEvent('playAgain', {
          bubbles: true
        });
        
        playAgainBtn.dispatchEvent(event);
      });
    }
  });
</script> 