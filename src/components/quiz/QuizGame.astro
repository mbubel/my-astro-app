---
import { Icon } from 'astro-icon/components';
import { quizQuestions } from '~/data/quiz-questions';

// Select 5 random questions for the quiz
const selectedQuestions = quizQuestions.sort(() => Math.random() - 0.5).slice(0, 5);

const totalQuestions = selectedQuestions.length;
---

<div id="quizGame" class="max-w-4xl mx-auto p-4">
  <!-- Quiz Header -->
  <div class="text-center mb-8">
    <div class="inline-flex items-center justify-center w-16 h-16 rounded-full bg-primary-100 dark:bg-primary-900 mb-4">
      <Icon name="tabler:brain" class="w-8 h-8 text-primary-600 dark:text-primary-400" />
    </div>
    <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-2">AstroWind Trivia Quiz</h1>
    <p class="text-gray-600 dark:text-gray-400">Test your knowledge with these trivia questions!</p>
  </div>

  <!-- Quiz Content -->
  <div id="quizContent">
    <div id="scoreDisplay"></div>
    <div id="questionCard"></div>
    <div id="quizResults" class="hidden"></div>
  </div>
</div>

<script define:vars={{ selectedQuestions, totalQuestions }}>
  let quizState = {
    currentQuestion: 1,
    score: 0,
    answers: [],
    isComplete: false,
    showFeedback: false,
  };

  const scoreDisplayEl = document.getElementById('scoreDisplay');
  const questionCardEl = document.getElementById('questionCard');
  const quizResultsEl = document.getElementById('quizResults');

  function initQuiz() {
    quizState = {
      currentQuestion: 1,
      score: 0,
      answers: [],
      isComplete: false,
      showFeedback: false,
    };

    // Hide results and show quiz content
    if (quizResultsEl) {
      quizResultsEl.classList.add('hidden');
    }

    renderQuiz();
  }

  function renderQuiz() {
    if (quizState.isComplete) {
      renderResults();
    } else {
      renderQuestion();
    }
  }

  function renderQuestion() {
    const currentQ = selectedQuestions[quizState.currentQuestion - 1];

    if (scoreDisplayEl && questionCardEl) {
      scoreDisplayEl.innerHTML = `
        <div class="mb-8">
          <div class="mb-4">
            <div class="flex justify-between items-center mb-2">
              <span class="text-sm font-medium text-gray-700 dark:text-gray-300">
                Question ${quizState.currentQuestion} of ${totalQuestions}
              </span>
              <span class="text-sm font-medium text-gray-700 dark:text-gray-300">
                Score: ${quizState.score}/${totalQuestions}
              </span>
            </div>
            <div class="w-full bg-gray-200 rounded-full h-2 dark:bg-gray-700">
              <div class="bg-primary-600 h-2 rounded-full transition-all duration-300 ease-out" style="width: ${(quizState.currentQuestion / totalQuestions) * 100}%"></div>
            </div>
          </div>
        </div>
      `;

      questionCardEl.innerHTML = `
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 max-w-2xl mx-auto">
          <div class="mb-6">
            <h2 class="text-xl font-bold text-gray-900 dark:text-white mb-4">${currentQ.question}</h2>
            ${
              quizState.showFeedback
                ? `
              <div class="text-center py-3 px-4 rounded-lg mb-4 font-semibold text-lg ${quizState.answers[quizState.currentQuestion - 1] === currentQ.correctAnswer ? 'text-green-600 dark:text-green-400 bg-green-100 dark:bg-green-900' : 'text-red-600 dark:text-red-400 bg-red-100 dark:bg-red-900'}">
                ${quizState.answers[quizState.currentQuestion - 1] === currentQ.correctAnswer ? 'Correct!' : 'Incorrect!'}
              </div>
            `
                : ''
            }
          </div>
          <div class="space-y-3">
            ${currentQ.options
              .map((option, index) => {
                const isSelected = quizState.answers[quizState.currentQuestion - 1] === index;
                const isCorrect = index === currentQ.correctAnswer;
                let buttonClass = 'w-full p-4 text-left rounded-lg border-2 transition-all duration-200 font-medium';

                if (quizState.showFeedback) {
                  if (isSelected && isCorrect) {
                    buttonClass +=
                      ' bg-green-100 border-green-500 text-green-800 dark:bg-green-900 dark:border-green-400 dark:text-green-200';
                  } else if (isSelected && !isCorrect) {
                    buttonClass +=
                      ' bg-red-100 border-red-500 text-red-800 dark:bg-red-900 dark:border-red-400 dark:text-red-200';
                  } else if (isCorrect) {
                    buttonClass +=
                      ' bg-green-100 border-green-500 text-green-800 dark:bg-green-900 dark:border-green-400 dark:text-green-200';
                  } else {
                    buttonClass +=
                      ' bg-gray-100 border-gray-300 text-gray-600 dark:bg-gray-800 dark:border-gray-600 dark:text-gray-400 opacity-60';
                  }
                } else if (isSelected) {
                  buttonClass +=
                    ' bg-primary-100 border-primary-500 text-primary-800 dark:bg-primary-900 dark:border-primary-400 dark:text-primary-200';
                } else {
                  buttonClass +=
                    ' bg-white border-gray-300 text-gray-900 hover:bg-blue-100 hover:border-blue-400 dark:bg-gray-800 dark:border-gray-600 dark:text-white dark:hover:bg-gray-700 dark:hover:border-blue-500';
                }

                return `
                <button type="button" class="${buttonClass}" ${quizState.showFeedback ? 'disabled' : ''} data-index="${index}">
                  <span class="flex items-center">
                    <span class="w-6 h-6 rounded-full border-2 mr-3 flex items-center justify-center text-sm font-bold">${String.fromCharCode(65 + index)}</span>
                    ${option}
                  </span>
                </button>
              `;
              })
              .join('')}
          </div>
        </div>
      `;

      const answerButtons = questionCardEl.querySelectorAll('[data-index]');
      answerButtons.forEach((button) => {
        button.addEventListener('click', handleAnswerClick);
      });
    }
  }

  function handleAnswerClick(e) {
    const target = e.target.closest('button');
    if (!target || target.disabled) return;

    const answerIndex = parseInt(target.dataset.index || '0');
    const currentQ = selectedQuestions[quizState.currentQuestion - 1];

    quizState.answers[quizState.currentQuestion - 1] = answerIndex;

    if (answerIndex === currentQ.correctAnswer) {
      quizState.score++;
    }

    quizState.showFeedback = true;
    renderQuiz();

    setTimeout(() => {
      nextQuestion();
    }, 2000);
  }

  function nextQuestion() {
    if (quizState.currentQuestion < totalQuestions) {
      quizState.currentQuestion++;
      quizState.showFeedback = false;
      renderQuiz();
    } else {
      quizState.isComplete = true;
      renderQuiz();
    }
  }

  function renderResults() {
    if (!scoreDisplayEl || !questionCardEl || !quizResultsEl) return;

    scoreDisplayEl.innerHTML = '';
    questionCardEl.innerHTML = '';
    quizResultsEl.classList.remove('hidden');

    const percentage = Math.round((quizState.score / totalQuestions) * 100);

    let message = '';
    let style = '';
    let icon = '';

    if (percentage >= 80) {
      message = "Excellent! You're a trivia master!";
      style = 'text-green-600 dark:text-green-400';
      icon = 'üèÜ';
    } else if (percentage >= 60) {
      message = 'Good job! You know your stuff!';
      style = 'text-blue-600 dark:text-blue-400';
      icon = '‚≠ê';
    } else if (percentage >= 40) {
      message = 'Not bad! Keep learning!';
      style = 'text-yellow-600 dark:text-yellow-400';
      icon = 'üí°';
    } else {
      message = "Keep practicing! You'll get better!";
      style = 'text-red-600 dark:text-red-400';
      icon = '‚ù§Ô∏è';
    }

    quizResultsEl.innerHTML = `
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-8 max-w-md mx-auto text-center">
        <div class="mb-4 text-4xl">${icon}</div>
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">Quiz Complete!</h2>
        <p class="text-3xl font-bold text-primary-600 dark:text-primary-400 mb-2">${quizState.score}/${totalQuestions}</p>
        <p class="text-gray-600 dark:text-gray-400 mb-4">${percentage}% Correct</p>
        <p class="mb-6 ${style} font-semibold">${message}</p>
        <button id="playAgainBtn" class="w-full bg-primary-600 hover:bg-primary-700 text-white font-semibold py-3 px-6 rounded-lg">
          üîÅ Play Again
        </button>
      </div>
    `;

    const playAgainBtn = quizResultsEl.querySelector('#playAgainBtn');
    if (playAgainBtn) {
      playAgainBtn.addEventListener('click', initQuiz);
    }
  }

  document.addEventListener('DOMContentLoaded', initQuiz);
</script>
